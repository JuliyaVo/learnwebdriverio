//Завдання по округленню чисел у JavaScript

//Завдання 1.1: Основи змінних
  //Створення змінних:
    //Створіть змінну `name` і присвойте їй ваше ім'я як рядок.
    let myName = 'Julia';
    //Створіть змінну `age` і присвойте їй ваш вік як число.
    let age = 41;
  //Перевірка типів:
    //Використайте `typeof` для перевірки типу кожної змінної.
     console.log(typeof myName, age);





//Завдання 1.2: Ініціалізація зі значеннями за замовчуванням

/**Створення змінних зі значеннями за замовчуванням**:
  - Створіть змінну `city` зі значенням за замовчуванням `"Kyiv"`.
  - Створіть змінну `isStudent` зі значенням за замовчуванням `true`.
- **Перевірка значень та типів**:
  - Виведіть значення та тип кожної змінної.

## Завдання 1.3: Зміна значень змінних

- **Робота зі змінними**:
  - Створіть змінну `score` і присвойте їй початкове значення `10`.
  - Збільшіть значення `score` на `5` і виведіть нове значення.
- **Перевірка результата**:
  - Використайте `console.log` для виведення оновленого значення `score`.

## Завдання 1.4: Обробка нечітких даних

- **Створення та обробка нечітких даних**:
  - Створіть змінну `temperature` і присвойте їй значення `"25 градусів"`.
  - Використайте `parseInt()` для отримання числового значення з рядка і виведіть результат.
- **Аналіз виведеного результату**:
  - Обговоріть, чому використання `parseInt()` може бути корисним у таких сценаріях.

# Завдання по перевірці типів і порівнянню у JavaScript

## Завдання 2.1: Перевірка типів та порівняння

- **Перевірка типів**:
  - Створіть змінні `c = "100"` і `d = 100`.
  - Використайте `typeof` для перевірки типів змінних `c` і `d`.
- **Порівняння**:
  - Порівняйте `c` і `d` за допомогою `==` і `===`.
  - Виведіть результати порівнянь і поясніть їх.

## Завдання 2.2: Порівняння різних типів

- **Створення змінних**:
  - Створіть змінну `e = "true"` та змінну `f = true`.
- **Перевірка і порівняння**:
  - Використайте `typeof` для перевірки типів `e` і `f`.
  - Порівняйте `e` і `f` з використанням `==` і `===`.
  - Обговоріть, чому результати порівнянь вийшли такими.

## Завдання 2.3: Порівняння з null і undefined

- **Перевірка типів**:
  - Створіть змінну `g = null` і змінну `h = undefined`.
- **Аналіз результатів**:
  - Використайте `typeof` для `g` і `h`.
  - Порівняйте `g` і `h` за допомогою `==` і `===`.
  - Поясніть різницю між результатами порівнянь.

## Завдання 2.4: Глибше розуміння типів

- **Створення змінних**:
  - Створіть змінну `i = "0"` та змінну `j = 0`.
- **Перевірка і порівняння**:

  - Перевірте типи `i` та `j`.
  - Порівняйте `i` і `j` з використанням `==` і `===`.
  - Обговоріть, як JavaScript обробляє ці порівняння та чому важливо розуміти різницю між `==` і `===`.

# Завдання по використанню функцій для чисел у JavaScript

## Завдання 3.1: Перетворення рядка в числа

- **Виконання**:
  - Використайте `parseInt()` і `parseFloat()` для перетворення рядка `"123.456"` в ціле число і число з плаваючою комою відповідно.
- **Результат**:
  - Виведіть результати і обговоріть, які перетворення відбулися.

## Завдання 3.2: Розуміння виведення

- **Виконання**:
  - Створіть рядок `"098.765"` і використайте `parseInt()` та `parseFloat()` для його перетворення.
- **Аналіз**:
  - Виведіть обидва результати. Поясніть, чому результати можуть відрізнятися від очікуваних, зокрема якщо рядок починається з нуля.

## Завдання 3.3: Обробка нетипових випадків

- **Виконання**:
  - Спробуйте перетворити рядки `"abc123"` та `"123abc"` за допомогою `parseInt()` та `parseFloat()`.
- **Аналіз**:
  - Виведіть результати і обговоріть, як JavaScript обробляє рядки, які містять як числа, так і нечислові символи.

Ось додаткові завдання для практики з використанням методу isNaN() у JavaScript, оформлені у форматі Markdown:

markdown
Copy code

# Завдання по використанню методу isNaN() у JavaScript

## Завдання 4.1: Основне використання isNaN

- **Виконання**:
  - Перевірте, чи є значення `"hello"`, `123`, і `NaN` "Not-a-Number" за допомогою `isNaN()`.
- **Результат**:
  - Виведіть результати для кожного тесту і поясніть, чому метод повертає true або false.

## Завдання 4.2: isNaN з числовими значеннями

- **Виконання**:
  - Створіть змінні з числовими значеннями `42`, `0.25`, і `Infinity`.
  - Використайте `isNaN()` для перевірки кожного значення.
- **Аналіз**:
  - Обговоріть результати і поясніть, чому `isNaN()` повертає такі результати для цих чисел.

## Завдання 4.3: Порівняння isNaN і Number.isNaN

- **Виконання**:
  - Порівняйте результати використання `isNaN()` і `Number.isNaN()` для значень `"123"`, `undefined`, і `NaN`.
- **Результат**:
  - Виведіть і порівняйте результати, поясніть відмінності між цими двома методами.

## Завдання 5.1: Округлення до найближчого цілого

- **Використання**: Використайте функцію `Math.round()` для округлення числа `7.25`.
- **Результат**: Виведіть результат і поясніть, чому ви отримали таке значення.

## Завдання 5.2: Округлення до меншого цілого

- **Використання**: Використайте функцію `Math.floor()` для округлення числа `7.25`.
- **Результат**: Виведіть результат і обговоріть, як `Math.floor()` працює з позитивними числами.

## Завдання 5.3: Округлення до більшого цілого

- **Використання**: Використайте функцію `Math.ceil()` для округлення числа `7.25`.
- **Результат**: Виведіть результат і поясніть, як `Math.ceil()` впливає на результат округлення.

## Додаткове завдання 5.4: Практика з різними числами

- **Завдання**: Створіть змінні з числами `8.75`, `6.00`, і `-2.88`.
- **Округлення**: Для кожного числа виконайте округлення за допомогою `Math.round()`, `Math.floor()`, і `Math.ceil()`.
- **Результати**: Запишіть результати для кожного методу і кожного числа.*/
